/* 
 * Controller for the different status of a parameter sweep simulation
 */
var ParameterSweepSimulationController = {
    
    painters: null,
    
    init: function(){
        this.painters = new Array();
    },
    
    addPainter: function(painterObj){
        this.painters.push(painterObj);
    },
    
    deletePainter: function(painterObj){
        var index = this.painters.indexOf(painterObj);
        if (index > -1){
            this.painters.splice(index, 1);
        }
    },
    
    notifyPainters: function(){
        for (var i = 0; i < this.painters.length; i++){
            var painter = this.painters[i];
            painter.paint();
        }
    },
    
    startSimulation: function(simulationId){
        this.postRequest(simulationId);
    },
    
    stopSimulation: function(simulationId){
        this.postRequest(simulationId);
    },

    /**
     * POST request that starts or stops a simulation depending on its current
     * status
     */
    postRequest: function(simulationId){
        $.ajax({
            url: getBaseApiUrl() + "/users/username/projects/" + G_VARS["projectId"]  + "/parametersweepsimulations/" + simulationId,
            method: "POST",
            //contentType: "application/json",
            success: function(data){
                ParameterSweepSimulationController.notifyPainters();
                alert("ok");
            },
            error : function(xhr, status) {
                //here an alert should be desplayed
                alert("Se ha producido un error al cambiar el estado de la simulaci贸n");
            },
            // c贸digo a ejecutar sin importar si la petici贸n fall贸 o no
            complete : function(xhr, status) {
                //alert(status);
            }
        });
    }
}

